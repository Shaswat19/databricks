name: cicd



jobs:
  Build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Compile
        run: echo Hello, world!
        
  Integration_testing:
    needs: [Build]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2

      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install pytest
      - name: List files for debugging
        run: |
          echo "Listing files in the root directory"
          ls -R
          echo "Listing files in the testing directory"
          ls -R tests

      - name: Run integration tests
        run:  pytest tests/
    continue-on-error: false

            
  DeployProd:
    name: Deploy to Production 
    runs-on: ubuntu-latest
    needs: [Integration_testing]
    environment: 
      name: Production
      url: ${{ github.event.pull_request.html_url }}
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Configure Git
      run: |
          git config --global user.name 'GitHub Actions'
          git config --global user.email 'actions@github.com'

    - name: Switch to production branch
      run: | 
          git fetch --prune --unshallow
          git checkout production
          git pull origin staging
          git checkout production
          git rebase production
          git push origin production --force
    - name: Setup Python
      uses: actions/setup-python@v2

    - name: Install Databricks CLI
      run: |
          python -m pip install --upgrade databricks-cli

    - name: Remote update Prod Repo
      env:
          DATABRICKS_HOST: ${{ secrets.DATABRICKS_HOST }}
          DATABRICKS_TOKEN: ${{ secrets.DATABRICKS_TOKEN }}
      run: |
          databricks repos update --branch production --path /Repos/shaswat.pandey@onebyzero.ai/databricks
      
    
    # - name: Merge changes from staging
    #   run: git merge staging --no-edit

    # - name: Push changes to production
    #   run: git push origin production
        

        
